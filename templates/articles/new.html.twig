{% extends 'base_no_pole_button.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/art_retourExp_new.css')}}">
{% endblock %}

{% block title %}Ajouter un nouvel article{% endblock %}
    
{% block body %}
    {% if error is defined %}
        <div class="alert">
            <p>Erreur lors de l'envoi formulaire : pôle invalide.</p>
        </div>
    {% endif %}

    <div class="container newArticle" >
        <h2 class="text-center">Nouvel article</h2>
        
        {{ form_start(form, {'attr': {'class':'px-lg-5', 'onsubmit':"contentCheck(event)"}}) }} 
            
            <hr class="hrNewArt">
            
            <div class="row">
                {# Pole  #}
                <div class="col-12">
                    {{ form_row(form.pole, {'label':"Pole*", 'attr': {'class':"form-control w-100 inputBorder"}} ) }}
                </div>
               
                {# Titre #}
                <div class="col-12">
                    {{ form_row(form.titreArticle, {'label':"Titre*",'attr': {'class':"form-control w-100 inputBorder" ,'minlength':'2','maxlength':'50', 'placeholder':'Max 50 caractères'}} ) }}
                </div>
            </div>
            
            {# Accroche  #}
            <div class="mx-auto">
                {{ form_row(form.accroche, {'label':"Accroche*",'attr': {'class':"form-control w-100 inputBorder",'minlength':'10','maxlength':'100', 'placeholder':'Max 100 caractères'}} ) }}
            </div>

            {# Intro  #}
            <div class="mx-auto">
                {{ form_row(form.intro, {'label':"Introduction*",'attr': {'style':'height:100px','class':"form-control w-100 inputBorder",'minlength':'10','maxlength':'255', 'placeholder':'Max 255 caractères'}} ) }}
            </div>

            {# Contenu #}
            <div class="mx-auto">
                {{ form_row(form.contenu, {'label':"Contenu*",'id':"myeditor",'attr': {'style':'height:150px', 'class':"form-control w-100 inputBorder",'minlength':'10'}} ) }}
            </div>

            {# Video #}
           <!--<div class="mx-auto">
                {{ form_row(form.video, {'label':"Ajouter une vidéo",'attr': {'class':"form-control w-100 inputBorder"}} ) }}
            </div> -->

           {# Image de l'article #}
            <div class="mx-auto">
                <small>Cette image représente votre article</small>
                {{ form_row(form.imgArticle, {'label':"Image de votre article",'attr': {'class':"form-control w-100 inputBorder"}} ) }}
            </div>

            {# Photo #}
           <!-- <div class="mx-auto">
                <small>Ici, vous pouvez ajouter des images pour expliquer le contenu de votre retour d'experience </small>
                {{ form_row(form.images, {'label':"Ajouter des images",'attr': {'class':"form-control w-100"}} ) }}
            </div> -->

            {# Accepter les conditions #}
            <div class="checkbox text-center mt-5">
                <label><input type="checkbox" value="" required> En rédigeant cette publication, vous acceptez les <a target="_blank" href="/docs/CharteGB.pdf" class="lienCharte">conditions générales</a> la concernant</label>
            </div>

            <div class="row align-items-center flex-column my-3"> 
                {# Publier #}
                <div class="col-12 text-center">
                    <button type="submit" class="mb-3 btn btnRed"><i class="fas fa-plus"></i> {{ button_label|default('Publier') }}</button>
                </div>

                {# Retour #}
                <div class="col-12 text-center">
                    <a href="{{ path('articles') }}" class="mx-auto retour"><i class="fas fa-undo-alt"></i> Retour a la liste des articles</a>  
                </div>
            </div>
        {{ form_end(form) }} 
    </div>
{% endblock %}   
       
{% block javascripts %}
    <script>
        //Input chargement D'image affichage des images saisis
        $(document).on('change', '.custom-file-input', function () {
            let fileName = $(this).val().replace(/\\/g, '/').replace(/.*\//, '');
            $(this).parent('.custom-file').find('.custom-file-label').text(fileName);
        });

        function contentCheck(event) {
            var ck1 = CKEDITOR.instances["articles_intro"].getData();
            var ck2 = CKEDITOR.instances["articles_contenuArticle"].getData();
            if (ck1 == "") {
                event.preventDefault();
                document.getElementById('demo').classList.add('show')
            }else if(ck2 == "") { 
                 event.preventDefault();
                document.getElementById('demo2').classList.add('show')
            }
        }

        $(document).ready(function() {  
            var i=1;  
            $('#add').click(function(){  
                if (i<5){
                    $('#items').append('<div class="d-flex inputFormArticle inputAdded" id="removeDiv'+i+'"><input type="file" id="articles_images" multiple="multiple" name="articles[images][]" class="form-control mt-1" style="width:40%;"></input><button type="btn btn-danger" class="buttonRemove ml-1 mt-1" id="'+i+'" style="background-color:rgb(255,34,39);color:white;border-radius:10px;">Supprimer cette image</button></div>')
                    i++;  
                } else {
                    print('Seulement 5 photos');
                }
            });  

            $(document).on('click', '.buttonRemove', function(){  
                var button_id = $(this).attr("id");   
                $('#removeDiv'+button_id+'').remove();
                i--; 
            });  

            $(document).on('click', '.resetButton', function(){             
                $('.inputAdded').remove();  
                i=1;
            });      
        })
    
        // Fonction multi upload image //
        function previewFiles() {
            var preview = document.querySelector('#preview2');
            var files   = document.querySelector('input[type=file]').files;

            function readAndPreview(file) {
                if ( /\.(jpe?g|png|gif)$/i.test(file.name) ) {
                    var reader = new FileReader();
                    reader.addEventListener("load", function () {
                        var image = new Image();
                        image.height = 100;
                        image.title = file.name;
                        image.src = this.result;
                        image.style.padding = "0.3em";
                        preview.appendChild( image );
                    }, false);
                    reader.readAsDataURL(file);
                }
            }

            if (files) {
                [].forEach.call(files, readAndPreview);
            }
        }
    </script>
{% endblock %}